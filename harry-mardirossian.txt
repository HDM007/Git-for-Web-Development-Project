Hello!
Below you'll find the Codepen link, as well as the answers to the review questions. Thank you for reviewing!

Codepen: https://codepen.io/hdm007/pen/poEJXwj?editors=1100

Questions:

    1. What is Semantic HTML? 

    Self-describing tags with specific purposes - e.g. <section> is a section related to the content on the page, <h1> is a header. A good example of a non-semantic tag is <div>.

    2. What is HTML used for? 

    Hypertext Markup, HTML is used to build the bones of the webpage and infuse SEO tags (among other things).

    3. What is an attribute and where do we put it?

    Attributes can be added to numerous elements - <a> has the 'href' attribute, <img> has 'src.' Attributes add more information that's important to the HTML element being rendered or crawled correctly. 

    4. What is the h1 tag used for? How many times should I use it on a page?

    1st priority header, use it sparingly (probably once).

    5. Name two tags that have required attributes

    <a> <img>

    6. What do we put in the head of our HTML document? 

    Meta-charset, stylesheets, doctype, language.

    7. What is an id? 

    High-priority identifier used to tag an element for unique purposes (e.g. style just this one paragraph of the many on the page).

    8. What elements can I add an id to? 

    All valid HTML elements.

    9. How many times can I use the same id on a page? 

    Once.

    10. What is a class? 

    Similar to ID, except it can be used multiple times for elements that have thematic similarities.

    11. What elements can I add a class to? 

    All valid HTML elements.

    12. How many times can I use the same class on a page? 

    As many times as desired.

    13. How do I get my link to open in a new tab?

    <a href="#" target="_blank"> New Tab </a>

    14. What is the alt attribute in the image tag used for? 

    ARIA - accessibility, since there are different ways to traverse the web.
    Also, SEO on images.

    15. How do I reference an id?

    #id

    16. What is the difference between a section and a div

    Section is semantic + fits into the theme of the content on the page; div is not semantic, and mostly has the use-case assigned to it by the developer.


    17. What is CSS used for? 

    Styling HTML - e.g. adding actual design vs bare-bones text and default spacing.

    18. How to we select an element? Example - every h2 on the page

    h2{
        color: black;
    }

    19. What is the difference between a class and an id? - Give me an example of when I might use each one

    Use-case/specificity. ID is unique to one value, class is for multiple values with thematic similarities. 

    Class is useful for dynamically populating products in a product list with the same styling rules.

    ID is useful for a single element that has special rules - for instance, a single image offset in a navbar.


    20. How do we select classes in CSS?

    .class


    21. How do we select a p element with a single class of “human””?

    .human{
        color: red;
    }

    22. What is a parent child selector? When would this be useful? 

    parent-child selector is useful for selecting the children of a single parent element (e.g. all paragraphs in a div, all images in a section, etc). Useful for dynamically populated lists as well.

    div > p {
        color: red;
    }

    23. How do you select all links within a div with the class of sidebar?
    .sidebar > a{
        color: red;
    }

    24. What is a pseudo selector?

    Specifies a special state - e.g. onClick, hover, etc.

    25. What do we use the change the spacing between lines?

    line-height.

    26. What do we use to change the spacing between letters?

    letter-spacing.
    
    27. What do we use to to change everything to CAPITALS? lowercase? Capitalize?

    element{
        text-transform: uppercase/lowercase/capitalize
    }

    28. How do I add a 1px border around my div that is dotted and black?

    div{
        border: 1px dotted black;
    }

    29. How do I select everything on the page? 

    *{
        color: black;
    }


    30. How do I write a comment in CSS?
    /* comment */

    31. How do I find out what file I am in, when I am using the command line? 

    pwd


    32. Using the command line - how do I see a list of files/folders in my current folder?

    ls 

    33. How do I remove a file via the command line? Why do I have to be careful with this? 

    mv command - as mentioned in class, there are no prompts or confirmations, so you must be careful to handle the changes exactly and avoid mixing-up the files or moving them to the wrong place.

    34. Why should I use version control? 

    Accountability, to review change history, to be able to revert back to previous versions, to be able to collaborate effectively.

    35. How often should I commit to github?

    After each unit of work. E.g. I don't commit after changing one styling item in my navbar, but I'll commit after I finish setting up the navbar, or when I've made substantial changes from the last commit.

    36. What is the command we would use to push our repo up to github? 
    git push -u origin <branch-name>

    37. Walk me through Lambda's git flow.

    Fork, clone, branch, then complete work, then add to staging, then commit, then push to the branch on the repo, then submit a pull request without merging my work onto the main branch.

Stretch Questions

    1. What is the difference between an inline element and a block element?
    Inline elements (<span>) will stay on the same line as the preceding elements.
    Three spans will show up inline, e.g. on the same line.

    Block elements, however, take up a whole new line and default to new lines. They follow the block styling rules.

    2. What happens when an element is positioned absolutely? 

    The element is removed from the flow of the regular document - e.g. it won't be affected by the items before/after, and vice-versa. Position relative to ancestor, if exists.

    3. How do I make an element take up only the amount of space it needs but also have the ability to give it a width? 
    Display: flex

    4. Name 3 elements that are diplay block by default, 2 elements that are display inline by default and 1 element that is display inline-block by default

    Block: <p> <h1> <li>
    Inline: <span> <a> 
    Inline-block: <button>

    5. In your own words, explain the box model. What is the "fix" for the box model, in other words, how do we make all elements respect the width we've given them? 

    Box model relies HEAVILY on properties of each individual element (margin, padding, border) to define how the elements interact in the UI with each other. This is problematic due to all the media queries that are required, the hard-coded values that must be determined, and the excessive use of floats.

    Flexbox is a modern solution, which essentially provides instructions to elements on how they should behave (a) relative to each other and (b) relative to the space they exist in.



   --> 